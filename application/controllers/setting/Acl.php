<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Acl extends ST_Controller {
	
	public function __construct() {
		parent::__construct();
		$this->data['PAGE_TITLE'] = 'Access Control';
		$this->restricted('acl');
		
		$this->breadcrumbs->push('Access Control', '/settings/acl/roles');
	}
	
	public function index()
	{
		$this->enqueue_style('../../css/jstree/style.min.css');
		$this->enqueue_scripts('../../js/jstree/jstree.min.js');
		$this->dashboard('/adminlte/setting/acl/index');
	}
	
	public function get_menu_tree($group_id = null)
	{
		
		$resources = Model\Acl_resource::all();
/*
{
  id          : "string" // will be autogenerated if omitted
  text        : "string" // node text
  icon        : "string" // string for custom
  state       : {
    opened    : boolean  // is the node open
    disabled  : boolean  // is the node disabled
    selected  : boolean  // is the node selected
  },
  children    : []  // array of strings or objects
  li_attr     : {}  // attributes for the generated LI node
  a_attr      : {}  // attributes for the generated A node
}
*/		

		$restricted_resource_role = Model\Acl_restricted_resource::result()->find_by_group_id($group_id)->to_array();
		//var_dump($restricted_resource_role); die;
		
		$resources_tree = array();
		foreach($resources as $resource) {
			
			$r = $resource;
		

			if(!$r->parent_id) {
				$resources_tree[] = array(
					'id'        => $r->id,
					'parent'    => $r->parent_id ? $r->parent_id : '#',
					'text'      => '('.$r->id.') '.$r->label,
					'icon'      => $r->icon ? 'fa '.$r->icon : 'fa fa-folder-o',
					'state'     => false,
				);
			} else {
				$state = (is_int(array_search($r->id, array_column($restricted_resource_role, 'resource_id'))) ? false : true);
				//echo $r->id; var_dump($state);
				$resources_tree[] = array(
					'id'        => $r->id,
					'parent'    => $r->parent_id ? $r->parent_id : '#',
					'text'      => '('.$r->id.') '.$r->label,
					'icon'      => $r->icon ? 'fa '.$r->icon : 'fa fa-folder-o',
					'state'     => array('selected' => $state),
				);
			}

		}
		
		//var_dump($resources_tree); die;
		
		$this->output->enable_profiler(false);
		$this->output->set_content_type('application/json');
		$this->output->set_output(json_encode($resources_tree));
	}
	
	public function save()
	{
		$role_id = $this->input->post('role_id');
		$selected_resource = $this->input->post('resource');
		
		$this->db->query("delete from sip_acl_restricted_resource where group_id = $role_id");
		
		if($selected_resource) {
			$restrict_menu = Model\Acl_resource::result()->where_not_in('id', $selected_resource)->get()->to_array();
		} else {
			$restrict_menu = Model\Acl_resource::result()->all()->to_array();
			
		}
		
		
		if($restrict_menu){
			foreach($restrict_menu as $r) {
				if($r['id']) {
					$resource_id = $r['id'];
					$this->db->query("insert into sip_acl_restricted_resource (resource_id, group_id) values ($resource_id, $role_id)");
				}
			}
		}
		
		$this->json_response($selected_resource);
	}
}
